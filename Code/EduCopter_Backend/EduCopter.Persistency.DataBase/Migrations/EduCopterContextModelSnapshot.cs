// <auto-generated />
using System;
using EduCopter.Persistency.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduCopter.Persistency.DataBase.Migrations
{
    [DbContext(typeof(EduCopterContext))]
    partial class EduCopterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EduCopter.Domain.Geography.EFCity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Population")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFProvince", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Game.EFGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MissionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Game.EFGameCity", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("CityId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GameCity");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Geography.EFMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFMissionCity", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MissionOrder")
                        .HasColumnType("int");

                    b.HasKey("CityId", "MissionId");

                    b.HasIndex("MissionId");

                    b.ToTable("MissionCity");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFStudentMission", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "MissionId");

                    b.HasIndex("MissionId");

                    b.ToTable("StudentMission");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.School.EFClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.School.EFSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFAdministrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId")
                        .IsUnique();

                    b.HasIndex("SchoolId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFCity", b =>
                {
                    b.HasOne("EduCopter.Domain.Geography.EFProvince", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFProvince", b =>
                {
                    b.HasOne("EduCopter.Domain.Geography.EFCountry", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Game.EFGame", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", "Mission")
                        .WithMany("Games")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Users.EFStudent", "Student")
                        .WithMany("Games")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Game.EFGameCity", b =>
                {
                    b.HasOne("EduCopter.Domain.Geography.EFCity", "City")
                        .WithMany("GameCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Game.EFGame", "Game")
                        .WithMany("GameCities")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Geography.EFMap", "Map")
                        .WithMany("Missions")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Users.EFTeacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFMissionCity", b =>
                {
                    b.HasOne("EduCopter.Domain.Geography.EFCity", "City")
                        .WithMany("MissionCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", "Mission")
                        .WithMany("MissionCities")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFStudentMission", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", "Mission")
                        .WithMany("StudentMissions")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.Users.EFStudent", "Student")
                        .WithMany("StudentMissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.School.EFClass", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.School.EFSchool", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFStudent", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.School.EFClass", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.School.EFSchool", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("School");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFTeacher", b =>
                {
                    b.HasOne("EduCopter.Persistency.DataBase.Domain.School.EFClass", "Class")
                        .WithOne()
                        .HasForeignKey("EduCopter.Persistency.DataBase.Domain.Users.EFTeacher", "ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduCopter.Persistency.DataBase.Domain.School.EFSchool", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("School");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFCity", b =>
                {
                    b.Navigation("GameCities");

                    b.Navigation("MissionCities");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFCountry", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("EduCopter.Domain.Geography.EFProvince", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Game.EFGame", b =>
                {
                    b.Navigation("GameCities");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Geography.EFMap", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Mission.EFMission", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("MissionCities");

                    b.Navigation("StudentMissions");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.School.EFClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.School.EFSchool", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EduCopter.Persistency.DataBase.Domain.Users.EFStudent", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("StudentMissions");
                });
#pragma warning restore 612, 618
        }
    }
}
